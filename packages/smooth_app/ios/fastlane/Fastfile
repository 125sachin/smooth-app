default_platform(:ios)
platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    APP_IDENTIFIER = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    TEAM_ID = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
  
    puts("start sync_code_signing")
    sync_code_signing(type: "appstore", clone_branch_directly: false) #readonly: is_ci,
    update_code_signing_settings(
      path: "Runner.xcodeproj",
      use_automatic_signing: false,
      build_configurations: "Release",
      code_sign_identity: 'iPhone Distribution',
      profile_name: 'match AppStore org.openfoodfacts.app',
      targets: ["Runner"]
  )
   # if is_ci
      #create_keychain(
       # name: ENV['MATCH_KEYCHAIN_NAME'],
      #  password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      #  default_keychain: true,
      #  unlock: true,
      #  timeout: 3600,
      #  lock_when_sleeps: false
      #)
  #  end

    # ios approach
  puts("start sync_code_signing")
  sync_code_signing(type: "appstore", readonly: is_ci, clone_branch_directly: false)
  update_code_signing_settings(
    path: "Runner.xcodeproj",
    use_automatic_signing: false,
    build_configurations: "Release",
    code_sign_identity: 'iPhone Distribution',
    profile_name: 'match AppStore org.openfoodfacts.app',
    targets: ["Runner"]
  )

   # match(
   #   app_identifier: "org.openfoodfacts.app",
    #  type: "appstore",
      #readonly: is_ci,
      # disable to try to help the build
      #keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
    #  keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"],
    #)

    puts("start gym")
    gym(
      configuration: "Release",
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
            DEVELOPER_APP_ID => "match AppStore org.openfoodfacts.app"
        }
      }
    )

    puts("start pilot")
    pilot(
      #apple_id: ENV['FASTLANE_USER'],
      app_identifier: "org.openfoodfacts.app",
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      ipa: "./Runner.ipa"
    )
 #   build_app(
      #workspace: "Runner.xcworkspace",
     # scheme: "Runner",
     # export_method: "app-store"
      #version_code: flutter_version(pubspec_location: '../pubspec.yaml')["version_code"],
    #)
    #upload_to_testflight



    puts("Final End")
  end
end
